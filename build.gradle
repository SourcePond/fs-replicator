allprojects {
    group 'ch.sourcepond.io.fssync'
    version '0.1-SNAPSHOT'
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'maven'
    apply plugin: 'biz.aQute.bnd.builder'
    apply plugin: 'io.spring.dependency-management'

    sourceCompatibility = 1.8

    repositories {
        mavenLocal()
        mavenCentral()
    }

    sourceSets {
        integrationTest {
            java {
                compileClasspath += main.output + test.output
                runtimeClasspath += main.output + test.output
                srcDir file('src/integration-test/java')
            }
            resources.srcDir file('src/integration-test/resources')
        }
    }

    dependencyManagement {
        dependencies {
            // Compile dependencies
            dependency 'ch.sourcepond.osgi.cmpn:metatype-builder-lib:0.1'
            dependency 'ch.sourcepond.io:checksum-api:4.0.3'
            dependency 'org.slf4j:slf4j-api:1.7.25'
            dependency 'org.osgi:org.osgi.core:6.0.0'
            dependency 'org.osgi:osgi.cmpn:6.0.0'
            dependency 'com.hazelcast:hazelcast:3.8.6'

            // Runtime
            dependency 'com.google.inject:guice:4.1.0'
            dependency 'com.google.inject.extensions:guice-multibindings:4.1.0'
            dependency 'org.apache.servicemix.bundles:org.apache.servicemix.bundles.aopalliance:1.0_6'
            dependency 'com.google.guava:guava:19.0'

            // Test dependencies
            dependency 'junit:junit:4.12'
            dependency 'org.mockito:mockito-core:2.11.0'
            dependency 'ch.qos.logback:logback-core:1.2.3'
            dependency 'ch.qos.logback:logback-classic:1.2.3'
            dependency 'commons-io:commons-io:2.6'

            // Integration-test dependencies
            dependency 'org.apache.servicemix.bundles:org.apache.servicemix.bundles.javax-inject:1_2'
            dependency 'org.ops4j.pax.exam:pax-exam:4.11.0'
            dependency 'org.ops4j.pax.exam:pax-exam-container-karaf:4.11.0'
            dependency 'org.ops4j.pax.exam:pax-exam-junit4:4.11.0'
            dependency 'org.ops4j.pax.url:pax-url-aether:2.5.3'
        }
    }

    configurations {
        integrationTestCompile.extendsFrom testCompile
        integrationTestRuntime.extendsFrom testRuntime
    }

    dependencies {
        testCompile 'junit:junit'
        testCompile 'org.mockito:mockito-core'
        testCompile 'ch.qos.logback:logback-core'
        testCompile 'ch.qos.logback:logback-classic'
    }


    task generateDependsFile {
        // In order to fully use org.ops4j.pax.exam.CoreOptions.maven() stuff
        // we need to generate a META-INF/maven/dependencies.properties file
        // just like the generate-depends-file Maven goal from ServiceMix/Karaf

        File outputFileDir = project.file( "${project.buildDir}/classes/test/META-INF/maven/" )
        File outputFile = new File( outputFileDir, 'dependencies.properties' )

        outputs.file outputFile

        doFirst {
            outputFileDir.mkdirs()

            Properties properties = new Properties();

            // first we add our GAV info
            properties.setProperty( "groupId", "${project.group}" );
            properties.setProperty( "artifactId", project.name );
            properties.setProperty( "version", "${project.version}" );
            properties.setProperty( "${project.group}/${project.name}/version", "${project.version}" );

            // then for all our deps
            project.configurations.testRuntime.resolvedConfiguration.resolvedArtifacts.each {
                final String keyBase = it.moduleVersion.id.group + '/' + it.moduleVersion.id.name;
                properties.setProperty( "${keyBase}/scope", "compile" )
                properties.setProperty( "${keyBase}/type", it.extension )
                properties.setProperty( "${keyBase}/version", it.moduleVersion.id.version )
            }

            FileOutputStream outputStream = new FileOutputStream( outputFile );
            try {
                properties.store( outputStream, "Generated from Gradle by Hibernate build for PaxExam testing of hibernate-osgi module" )
            }
            finally {
                outputStream.close()
            }
        }
    }

    task integrationTest(type: Test) {
        integrationTest.testClassesDirs = sourceSets.integrationTest.output.classesDirs
        classpath = sourceSets.integrationTest.runtimeClasspath
        outputs.upToDateWhen { false }
    }

    check.dependsOn integrationTest
    integrationTest.dependsOn(install, generateDependsFile)
    integrationTest.mustRunAfter test
}

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'biz.aQute.bnd:biz.aQute.bnd.gradle:3.5.0'
        classpath 'io.spring.gradle:dependency-management-plugin:1.0.4.RELEASE'
    }
}